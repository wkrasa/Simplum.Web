{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component/app.component.html","webpack:///./src/app/app.component/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard.component/dashboard.component.ts.DashboardComponent.html","webpack:///./src/app/dashboard.component/dashboard.component.ts","webpack:///./src/app/infrastructure/infrastructure.module.ts","webpack:///./src/app/infrastructure/message-box.service.ts","webpack:///./src/app/page-not-found.component/pagenotfound.component.ts.PageNotFoundComponent.html","webpack:///./src/app/page-not-found.component/pagenotfound.component.ts","webpack:///./src/app/piglets-producer/sow-details.component.ts.SowDetailsComponent.html","webpack:///./src/app/piglets-producer/sow-details.component.ts","webpack:///./src/app/piglets-producer/sow-edit.component.ts.SowEditComponent.html","webpack:///./src/app/piglets-producer/sow-edit.component.ts","webpack:///./src/app/piglets-producer/sow.ts","webpack:///./src/app/piglets-producer/sows-list.component.ts.SowsListComponent.html","webpack:///./src/app/piglets-producer/sows-list.component.ts","webpack:///./src/app/piglets-producer/sows-routing.module.ts","webpack:///./src/app/piglets-producer/sows.module.ts","webpack:///./src/app/piglets-producer/sows.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEwB;AACW;SAG9B,EAAE,KAAK,EAAE,WAAW,EAAE,OACjB,EAAE,KAAK,EAAE,WAAW,EAAE,OAC/B,EAAE,KAAK,EAAE,UAAU,EAAE;AAH7E,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAkB,EAAE,IAAI,IAAwB,EAAG;IACnF,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,IAAwB,EAAE;IACvF,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,sGAAqB,EAAE,IAAI,IAAuB,EAAE;CAC9E,CAAC;AAEF;IAAA;IAOgC,CAAC;IAAD,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCZjC,oJAA6B,KAC3B,uIAAiB,KACf,0IAAoB,KAClB,sHAAI,sFAAc,MAGtB,wIAAiB,KACf,0IAAmB,KACjB,uIAAgB,KACd,2IAAqB,KACnB;;;2+BAA6E,kFAAI,MAEnF,4IAAqB,KACnB;;;2+BAAiE,kFAAI,MAEvE,4IAAqB,KACnB,0JAA6B,iFAAI,MAEnC,4IAAqB,KACnB;;;2+BAAsE,mFAAK,MAIjF,qKAAsD,KACpD,ikBAA2B,IAKjC,gKAAwC,KACtC,gZAA0C,IACxC;;;;;;;;;;;;;;wBAA0D;MAAzB;;wBAAwB;MAAzD,qgDAA0D,gGAC5D,MACA,gZAA0C,IACxC;;;;;;;;;;;;;;wBAA4D;MAA3B;;wBAA0B;MAA3D,qgDAA4D,oFAC9D,MACA,gZAA0C,IACxC;;;;;;;;;;;;;;wBAA2D;MAA1B;;wBAAyB;MAA1D,qgDAA2D,mFAC7D,MAEF,uHAAI,KACJ,wHAAK,wMAAgB,iDA/BgB,4BAAuB,EAAlD,aAA6E,EAAlD,SAAuB,GAAC,wBAAyB,EAA5E,aAA6E,EAA1B,SAAyB,GAGxD,uBAAkB,EAAtC,aAAiE,EAA7C,SAAkB,GAAC,wBAAyB,EAAhE,aAAiE,EAA1B,SAAyB,GAM5C,6BAAuB,EAA3C,aAAsE,EAAlD,UAAuB,GAAC,yBAAyB,EAArE,aAAsE,EAA1B,UAAyB,GAKzE,aAA2B,GAOI,oBAAwB,aAAzD,aAA0D,EAAzB,UAAwB,GAGxB,oBAA0B,eAA3D,aAA4D,EAA3B,UAA0B,GAG1B,oBAAyB,cAA1D,aAA2D,EAA1B,UAAyB,mDAlCpD,iDAAc,GAOd,sMAA6E,GAG7E,uMAAiE,GAMjE,yMAAsE,GAIxD,uFAAiC,IAArD,aAAsD,EAAlC,UAAiC,GAOvD,mVAA0C,GACxC,u6BAA0D,GAE5D,mVAA0C,GACxC,u6BAA4D,GAE9D,mVAA0C,GACxC,u6BAA2D,GAI1D,0LAAgB;;;;;;;;;;;;;;;;AC7CrB;AAAA;AAAA;IAAA;QAOE,UAAK,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;QACpD,SAAI,GAAG,MAAM,CAAC;QACd,UAAK,GAAG,eAAe,CAAC;IAM1B,CAAC;IAJC,+BAAQ,GAAR,UAAS,MAAM;QACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACzC,CAAC;IACH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoFE;AAEF;IAAA;IAgByB,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCrH1B,sHAAI,mGAAsB;;;;;;;;;;;;;;;;ACE1B;AAAA;AAAA;IAAA;IAImC,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACHpC;AAAA;AAAA;AAAA;AAAA;AAA0D;AAG/B;AAE3B;IAAA;IAWoC,CAAC;IAAD,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACfrC;AAAA;AAAA;IAAA;IAGA,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCPD,sHAAI,yMAAuB;;;;;;;;;;;;;;;;ACE3B;AAAA;AAAA;IAAA;QAIsC,SAAI,GAAG,KAAK,CAAC;IAAC,CAAC;IAAD,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCJ7C,wHAAiB,KACb,sHAAI,wFAAW,MACf,yHAAO,oFAAO,8HAAM,gFAAY,MAChC,yHAAO,mFAAM,8HAAM,iFAAY,yDADX,qDAAY,GACb,sDAAY;yGAJnC,8KAA2B,YAAnB;;wBAAkB;MAA1B,wBAA2B,oFAAO,MAClC,4YAAiB,iDAAZ,mBAAW,MAAhB,YAAiB,EAAZ,SAAW;;;;;;;;;;;;;;;;ACFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACR;AACN;AAIE;AAE7C;IAeI,6BACY,KAAqB,EACrB,QAAkB,EAClB,WAAwB;QAFxB,UAAK,GAAL,KAAK,CAAgB;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;IACpC,CAAC;IAED,sCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,qCAAO,GAAP;QAAA,iBAIC;QAHG,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;aACtB,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,GAAG,GAAG,GAAG,EAAd,CAAc,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IACL,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGCzCe,wHAAiB,KACb,sHAAI,qFAAQ,MACZ,yHAAO,mFACH;;;;;;;;;;;wBAAiD;MAA1C;;wBAAsB;MAA7B,+wCAAiD,IAErD,0HAAO,mFACH;;;;;;;;;;;wBAAiD;MAA1C;;wBAAsB;MAA7B,ixCAAiD,iDAH1C,mBAAsB,WAA7B,YAAiD,EAA1C,SAAsB,GAGtB,oBAAsB,WAA7B,aAAiD,EAA1C,UAAsB,2BAH7B,qtBAAiD,GAGjD,guBAAiD;sGANzD,yYAAiB,iDAAZ,mBAAW,MAAhB,YAAiB,EAAZ,SAAW;;;;;;;;;;;;;;;;ACDhC;AAAA;AAAA;AAAA;AAAA;AAAyD;AAE7B;AAEiB;AAE7C;IAkBI,0BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,mCAAQ,GAAR;IACA,CAAC;IACL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;IAAA;IAKA,CAAC;IAAD,UAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCLkB,wHAA0B,gOAAwC;uGAEjE,4LAAuE,YAA1C;;wBAA0B;MAAvD,wBAAuE,KACnE,yIAAyC,gFAAwB,MAAQ;;;gZAAuE,mFAAO,2BAA7C,gIAAoC,GAArE,YAAuE,EAAtC,SAAoC,mDAD1F,yBAAc,EAAtE,YAAuE,EAAf,SAAc,GAC5D,6CAAkC,eAAxC,YAAyC,EAAnC,SAAkC,GAAC,iGAAwB,GAAQ,oMAAuE;uGAHxK,sHAAI,4FAAe,gZAA0B,IAC7B,sHAAI,KACA,mdAAuE,IAI3E,ygBAA8B,iDANrB,mBAAmB,cAAzB,YAA0B,EAApB,SAAmB,GAEpB,mBAAwB,OAA5B,YAAuE,EAAnE,SAAwB,GAItB,mBAAmB,cAA7B,YAA8B,EAApB,SAAmB;;;;;;;;;;;;;;;;ACN7C;AAAA;AAAA;AAAA;AAAkD;AAIL;AAE7C;IAwBI,2BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,oCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,uCAAW,GAAX,UAAY,GAAQ;QAChB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IAC3B,CAAC;IAEO,mCAAO,GAAf;QAAA,iBAQC;QAPG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;aACrB,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IACL,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEG;AACI;SAIR,EAAE,KAAK,EAAE,MAAM,EAAE,OACJ,EAAE,KAAK,EAAE,aAAa,EAAE;AAH3F,IAAM,MAAM,GAAW;IACnB,4DAA4D;IAC9D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sEAAiB,EAAE,IAAI,IAAmB,EAAE;IACvE,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,0EAAmB,EAAE,IAAI,IAA0B,EAAE;CAC5F,CAAC;AAEF;IAAA;IAOiC,CAAC;IAAD,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACRlC;AAAA;AAAA;IAAA;IAa0B,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtB3B;AAAA;AAAA;AAAiD;AAIjD,IAAI,IAAI,GAAU;IACd,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;IACvE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAG,IAAI,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;IACtE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;IACvE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;CAC1E,CAAC;AAEF;IAAA;IASA,CAAC;IAPG,6BAAO,GAAP;QACI,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,4BAAM,GAAN,UAAO,EAAU;QACb,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,CAAC;IAC3C,CAAC;IACL,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACtBD;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component/dashboard.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component/pagenotfound.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, data: { state: 'dashboard' }  },\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full', data: { state: 'dashboard' } },\r\n  { path: '**', component: PageNotFoundComponent, data: { state: 'notfound' } }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes, { enableTracing: true })],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule { }\r\n","\r\n<style>\r\n  .row > div {\r\n    background: pink;\r\n    border: 1px solid black;\r\n  }\r\n</style>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <h1>Hello {{name}}</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\">\r\n      <ul class=\"nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" routerLink=\"/dashboard\" routerLinkActive=\"active\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/sows\" routerLinkActive=\"active\">Sows</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/errorlink\" routerLinkActive=\"active\">Error</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"col-10\" [@routerTransition]=\"getState(o)\">\r\n      <router-outlet #o=\"outlet\"></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"btn-group btn-group-toggle\">\r\n  <label class=\"btn-primary\" ngbButtonLabel>\r\n    <input type=\"checkbox\" ngbButton [(ngModel)]=\"model.left\"> Left (pre-checked)\r\n  </label>\r\n  <label class=\"btn-primary\" ngbButtonLabel>\r\n    <input type=\"checkbox\" ngbButton [(ngModel)]=\"model.middle\"> Middle\r\n  </label>\r\n  <label class=\"btn-primary\" ngbButtonLabel>\r\n    <input type=\"checkbox\" ngbButton [(ngModel)]=\"model.right\"> Right\r\n  </label>\r\n</div>\r\n<hr>\r\n<pre>{{model | json}}</pre>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component } from '@angular/core';\r\nimport { routerTransition } from './router-animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  animations: [routerTransition],\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  model = { left: false, middle: false, right: false};\r\n  name = 'test';\r\n  title = 'SimplumWebApp';\r\n\r\n  getState(outlet) {\r\n    console.log(outlet.activatedRouteData.state);\r\n    return outlet.activatedRouteData.state;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NgbPaginationModule, NgbAlertModule, NgbDatepicker, NgbButtonsModule, NgbCheckBox, NgbRadioGroup  } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\n\r\nimport { AppComponent } from './app.component/app.component';\r\nimport { DashboardComponent } from './dashboard.component/dashboard.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component/pagenotfound.component';\r\nimport { SowsModule } from './piglets-producer/sows.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { InfrastructureModule } from './infrastructure/infrastructure.module';\r\n\r\n/*\r\n- mock backend\r\n- login/auth\r\n- roles\r\n- module per functionality\r\n-- routing component\r\n- router guards\r\n- http interceptors (redirect to login)\r\n- animations\r\n- testing\r\n- sows functionality (crud)\r\n-- sows list: grid, datails on focus, more details on click\r\n- sgc funtionality\r\n-- sgc list\r\n--- sgc details\r\n--- sgc reports\r\n\r\n#==========\r\ncheck services:\r\n templateRef: TemplateRef<DelayContext>,\r\n     viewContainerRef: ViewContainerRef\r\n#==========\r\n- Debugger for Chrome extension\r\n#==========\r\n-- play with ElementRef service:\r\n--- add some child elements\r\n--- add styles\r\n--- create custom directive setting backgroud and tooltip\r\n--- play with events (jquery)\r\n#==========\r\n- edit sow via popup and refresh it on grid\r\n#==========\r\n- dialog box service with bootstrap\r\n#==========\r\n- create observable with interval, wrapping other observable\r\n#==========\r\n- sows crud\r\n- sow edit: new model for editing\r\n-- sow editing via router (pass id in url)\r\n#==========\r\n+ sow details component\r\n+ components communication\r\n#==========\r\n- JQuery for angular\r\n#==========\r\n- backend\r\n#==========\r\n--- bootstrap styles (https://medium.com/codingthesmartway-com-blog/using-bootstrap-with-angular-c83c3cee3f4a)\r\n--- search for nice styles on the internet\r\n--- bootstrap controls for angular\r\n#==========\r\n--- app layout (header, footer, content)\r\n#==========\r\n--- services \r\n---- sows service\r\n---- message box service\r\n#==========\r\n--- create form\r\n#==========\r\n--- create grid for sows\r\n---- details on focus\r\n#==========\r\n--- authorization (cookie)\r\n---- http interceptor (401 redirect)\r\n---- route guards\r\n#=========\r\n--- animations\r\n#=========\r\n--- boundles\r\n#=========\r\n--- lint (for styles)\r\n#========\r\n--- create backend project\r\n---- WebApi\r\n---- .Net Core\r\n#==========\r\n- tranlations\r\n#==========\r\n- setup for production enviroment\r\n#==========\r\n- CORS for web api\r\n#==========\r\n- OAuth (keycloak)\r\n#==========\r\n*/\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    SowsModule,\r\n    AppRoutingModule,\r\n    InfrastructureModule,\r\n    NgbModule],\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    PageNotFoundComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<h1>Dahsboard component 22</h1>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'dashboard',\n    template: `<h1>Dahsboard component 22</h1>`,\n})\nexport class DashboardComponent  { }\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MessageBoxService } from './message-box.service';\r\nimport { ModalDialogComponent } from './modal-dialog.component';\r\n\r\nexport { MessageBoxService}\r\n\r\n@NgModule({\r\n    imports: [],\r\n    declarations: [\r\n        ModalDialogComponent\r\n    ],\r\n    providers: [\r\n        MessageBoxService],\r\n    exports: [\r\n        ModalDialogComponent\r\n    ]\r\n})\r\nexport class InfrastructureModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MessageBoxService {\r\n\r\n}\r\n","<h1>Pege not found {{text}}</h1>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'dashboard',\n    template: `<h1>Pege not found {{text}}</h1>`,\n})\nexport class PageNotFoundComponent  { text = '404'; }\n","\n        <button (click)=\"goBack()\">go back</button>\n        <div *ngIf=\"sow\">              \n            <h1>Sow details</h1>\n            <label> name: <span>{{sow.name}}</span></label>\n            <label>elir: <span>{{sow.elir}}</span></label>\n        </div>\n            ","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { Sow } from './sow';\r\n\r\nimport { SowsService } from './sows.service';\r\n\r\n@Component({\r\n  selector: 'sow-details',\r\n    template: `\r\n        <button (click)=\"goBack()\">go back</button>\r\n        <div *ngIf=\"sow\">              \r\n            <h1>Sow details</h1>\r\n            <label> name: <span>{{sow.name}}</span></label>\r\n            <label>elir: <span>{{sow.elir}}</span></label>\r\n        </div>\r\n            `,\r\n})\r\nexport class SowDetailsComponent implements OnInit\r\n{\r\n    sow: Sow;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private location: Location,\r\n        private sowsService: SowsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getHero();\r\n    }\r\n\r\n    getHero(): void {\r\n        const id = +this.route.snapshot.paramMap.get('id');\r\n        this.sowsService.getSow(id)\r\n            .subscribe(sow => this.sow = sow);\r\n    }\r\n\r\n    goBack(): void {\r\n        this.location.back();\r\n    }\r\n}\r\n","\n                <div *ngIf=\"sow\">\n                    <h1>Sow edit</h1>\n                    <label>name:\n                        <input [(ngModel)]=\"sow.name\" placeholder=\"name\">\n                    </label>\n                    <label>elir:\n                        <input [(ngModel)]=\"sow.elir\" placeholder=\"elir\">\n                    </label>\n                </div>\n            ","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { Sow } from './sow';\r\n\r\nimport { SowsService } from './sows.service';\r\n\r\n@Component({\r\n  selector: 'sow-edit',\r\n    template: `\r\n                <div *ngIf=\"sow\">\r\n                    <h1>Sow edit</h1>\r\n                    <label>name:\r\n                        <input [(ngModel)]=\"sow.name\" placeholder=\"name\">\r\n                    </label>\r\n                    <label>elir:\r\n                        <input [(ngModel)]=\"sow.elir\" placeholder=\"elir\">\r\n                    </label>\r\n                </div>\r\n            `,\r\n})\r\nexport class SowEditComponent implements OnInit\r\n{\r\n    @Input() sow: Sow;\r\n\r\n    constructor(private sowsService: SowsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","export class Sow {\n    id: number;\n    elir: string;\n    name: string;\n    birtDate: Date;\n}\n","<h1>selected sow9: <span *ngIf=\"selectedSow\">{{selectedSow.name || selectedSow.elir}}</span></h1>\n                <ul>\n                    <li *ngFor=\"let sow of sows\" (click)=\"onSelectSow(sow)\" [@sowState]=\"\">\n                        <span [class.active]=\"sow===selectedSow\">{{sow.name || sow.elir}}</span> <a class=\"badge badge-secondary\" routerLink=\"/sow-details/{{sow.id}}\" >Details</a>\n                    </li>\n                </ul>\n                <sow-edit [sow]=\"selectedSow\"></sow-edit>\n            ","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, animate, style, state, group, animateChild, query, stagger, transition } from '@angular/animations';\r\n\r\nimport { Sow } from './sow';\r\nimport { SowsService } from './sows.service';\r\n\r\n@Component({\r\n  selector: 'sows-list',\r\n    template: `<h1>selected sow9: <span *ngIf=\"selectedSow\">{{selectedSow.name || selectedSow.elir}}</span></h1>\r\n                <ul>\r\n                    <li *ngFor=\"let sow of sows\" (click)=\"onSelectSow(sow)\" [@sowState]=\"\">\r\n                        <span [class.active]=\"sow===selectedSow\">{{sow.name || sow.elir}}</span> <a class=\"badge badge-secondary\" routerLink=\"/sow-details/{{sow.id}}\" >Details</a>\r\n                    </li>\r\n                </ul>\r\n                <sow-edit [sow]=\"selectedSow\"></sow-edit>\r\n            `,\r\n  animations: [trigger('sowState', [\r\n    state('void', style({\r\n      //transform: 'translateX(-20%)',\r\n    })),\r\n    transition(':enter', [style({ transform: 'translateX(-100%)' }), animate('3100ms ease-in', style({ color: 'red', transform: 'translateX(0)' }))]),\r\n    //transition(':enter', [animate('5200ms ease-in'), style({ transform: 'translateX(0%)' })]),\r\n\r\n  ])]\r\n})\r\nexport class SowsListComponent implements OnInit\r\n{\r\n    sows: Sow[];\r\n    selectedSow: Sow;\r\n\r\n    constructor(private sowsService: SowsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getSows();\r\n    }\r\n\r\n    onSelectSow(sow: Sow) {\r\n        this.selectedSow = sow;\r\n    }\r\n\r\n    private getSows(): void {\r\n        this.sowsService.getSows()\r\n            .subscribe(sows => {\r\n                this.sows = sows;\r\n                if (this.sows.length > 0) {\r\n                    this.selectedSow = this.sows[0];\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { SowsListComponent } from './sows-list.component';\r\nimport { SowDetailsComponent } from './sow-details.component';\r\n\r\nconst routes: Routes = [\r\n    //{ path: 'crisis-center', component: CrisisListComponent },\r\n  { path: 'sows', component: SowsListComponent, data: { state: 'sows' } },\r\n  { path: 'sow-details/:id', component: SowDetailsComponent, data: { state: 'sow-details' } }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class SowsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SowsRoutingModule } from './sows-routing.module';\r\nimport { SowsService } from './sows.service';\r\nimport { SowsListComponent } from './sows-list.component';\r\nimport { SowEditComponent } from './sow-edit.component';\r\nimport { SowDetailsComponent } from './sow-details.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      SowsRoutingModule,\r\n      FormsModule],\r\n    declarations: [\r\n        SowsListComponent,\r\n        SowEditComponent,\r\n        SowDetailsComponent],\r\n    providers: [\r\n        SowsService]\r\n})\r\nexport class SowsModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, fromEvent, of } from 'rxjs';\r\n\r\nimport { Sow } from './sow';\r\n\r\nlet sows: Sow[] = [\r\n    { id: 1, elir: '1111', name: 'sow1', birtDate: new Date('2015-01-11') },\r\n    { id: 2, elir: '2222', name:  null, birtDate: new Date('2016-01-01') },\r\n    { id: 3, elir: '3333', name: 'sow3', birtDate: new Date('2016-03-01') },\r\n    { id: 4, elir: '4444', name: 'sow4', birtDate: new Date('2017-04-22') }\r\n];\r\n\r\n@Injectable()\r\nexport class SowsService {\r\n    getSows(): Observable<Sow[]> {\r\n        return of(sows);\r\n    }\r\n\r\n    getSow(id: number): Observable<Sow> {\r\n        return of(sows.find(x => x.id === id));\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}